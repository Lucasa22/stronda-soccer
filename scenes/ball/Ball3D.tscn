[gd_scene load_steps=4 format=3 uid="uid://cak2m4n8p6q7r"]

[ext_resource type="Script" path="res://scripts/ball_3d/ball_3d_controller.gd" id="1_lmno"]

[sub_resource type="SphereMesh" id="SphereMesh_ball3d"]
radius = 0.22 # Standard soccer ball size is ~0.22m diameter
height = 0.44

[sub_resource type="SphereShape3D" id="SphereShape3D_ball3d"]
radius = 0.22

[node name="Ball3D" type="RigidBody3D" groups=["ball"]]
collision_layer = 4 # Physics layer 4 for Ball
collision_mask = 7  # Collide with World (1), Player (2), and other Balls (4)
script = ExtResource("1_lmno")
mass = 0.45 # Standard soccer ball mass ~0.45kg
# physics_material_override: Set in script or here if preferred
# linear_damp and angular_damp will use project defaults or can be overridden here/in script
continuous_cd = true # Important for fast moving small objects
contact_monitor = true # To detect collisions if needed by script
max_contacts_reported = 8 # Number of contacts to report

[node name="BallMesh" type="MeshInstance3D" parent="."]
mesh = SubResource("SphereMesh_ball3d")
# Basic white material for the ball
surface_material_override/0 = StandardMaterial3D.new()
surface_material_override/0.albedo_color = Color(0.95, 0.95, 0.95, 1)
surface_material_override/0.metallic = 0.2
surface_material_override/0.roughness = 0.4

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("SphereShape3D_ball3d")

[node name="VisibleOnScreenNotifier3D" type="VisibleOnScreenNotifier3D" parent="."]
aabb = AABB(-0.3, -0.3, -0.3, 0.6, 0.6, 0.6) # Slightly larger than the ball mesh
# Connect screen_exited() if ball needs to be reset/managed when off-screen
# Example: signal screen_exited() from VisibleOnScreenNotifier3D to _on_ball_screen_exited in ball_3d_controller.gd
[connection signal="body_entered" from="." to="." method="_on_body_entered"]

[node name="CollisionSound" type="AudioStreamPlayer3D" parent="."]
# Assign an AudioStream (e.g., ball_collision.wav or .ogg) to this node in the Inspector
# stream = ExtResource("Y_ball_collision_sound")
bus = "Master"
attenuation_model = 0
unit_db = 0.0
unit_size = 8.0
max_db = 0.0
pitch_scale = 1.0
autoplay = false
max_distance = 40.0
 doppler_tracking = 0
