[gd_scene load_steps=8 format=3 uid="uid://c5y8qm7n2k1p5"]

[ext_resource type="Script" path="res://scripts/player_3d/player_3d_controller.gd" id="1_zxcvb"]
[ext_resource type="PackedScene" uid="uid://d0j2c2x0qjswk" path="res://scenes/player/PlayerModel3D.tscn" id="2_model"]

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_player"]
radius = 0.4
height = 1.8

[sub_resource type="SphereShape3D" id="SphereShape3D_kick"]
radius = 0.7

[sub_resource type="SphereShape3D" id="SphereShape3D_dribble"]
radius = 0.4

[sub_resource type="CapsuleMesh" id="CapsuleMesh_Body"]
radius = 0.35
height = 0.9

[sub_resource type="SphereMesh" id="SphereMesh_Head"]
radius = 0.3
height = 0.6

[sub_resource type="SphereMesh" id="SphereMesh_Foot"]
radius = 0.15
height = 0.3

[node name="Player3D" type="CharacterBody3D"]
collision_layer = 1
collision_mask = 5
script = ExtResource("1_zxcvb")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.9, 0)
shape = SubResource("CapsuleShape3D_player")

[node name="PlayerModel" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0) # Origin at the player's feet level

[node name="PlayerModel3D_Instance" parent="PlayerModel" instance=ExtResource("2_model")]
# The PlayerModel3D.tscn should be built with its origin at the character's feet.
# And its internal elements (like Skeleton3D) positioned accordingly.
# For example, if Hips bone is at y=0.9 within PlayerModel3D.tscn, it will align correctly.

[node name="KickArea3D" type="Area3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.7, 0)
collision_layer = 0
collision_mask = 4
monitoring = true
monitorable = false

[node name="KickShape3D" type="CollisionShape3D" parent="KickArea3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0.6)
shape = SubResource("SphereShape3D_kick")

[node name="DribbleArea3D" type="Area3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.4, 0)
collision_layer = 0
collision_mask = 4
monitoring = true
monitorable = false

[node name="DribbleShape3D" type="CollisionShape3D" parent="DribbleArea3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0.3)
shape = SubResource("SphereShape3D_dribble")

[node name="PlayerNameLabel3D" type="Label3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2.2, 0)
text = "Player"
font_size = 32
outline_modulate = Color(0, 0, 0, 1)
billboard = 1
no_depth_test = true
fixed_size = true
pixel_size = 0.01

[node name="KickSound" type="AudioStreamPlayer3D" parent="."]
bus = "Master"
attenuation_model = 0
unit_db = 0.0
unit_size = 10.0
max_db = 0.0
pitch_scale = 1.0
autoplay = false
max_distance = 50.0
doppler_tracking = 0
# stream will be assigned in editor or later
font_size = 32 # This property seems to be a copy-paste error for AudioStreamPlayer3D
outline_modulate = Color(0, 0, 0, 1) # This property seems to be a copy-paste error
billboard = 1 # This property seems to be a copy-paste error
no_depth_test = true # This property seems to be a copy-paste error
fixed_size = true # This property seems to be a copy-paste error
pixel_size = 0.01 # This property seems to be a copy-paste error

# Note: The Skeleton3D hierarchy itself (bones) is not defined in the .tscn text format directly.
# This needs to be set up in the Godot editor. I've added placeholders for MeshInstance3Ds
# that would conceptually be part of the player model.
# The actual bone structure and parenting of meshes to bones will be done
# when creating the PlayerModel3D.tscn scene.
# For now, the meshes are children of Skeleton3D for organization.
# The `PlayerModel` node is positioned at `0, 0.9, 0` to align with the CharacterBody3D's base.
# The meshes are then positioned relative to this `PlayerModel`'s origin.
# Removed the `font_size`, `outline_modulate`, `billboard`, `no_depth_test`, `fixed_size`, `pixel_size` from KickSound as they are not valid properties.
